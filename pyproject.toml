[project]
name = "maie"
version = "0.1.0"
description = "Modular Audio Intelligence Engine"
readme = "README.md"
requires-python = ">=3.12"
dependencies = ["soxr", "transformers", "flashinfer-cubin", "rq-dashboard", "pyannote-audio==3.4.0", "torch>=2.8.0,<3", "torchaudio>=2.8.0,<3"]


[dependency-groups]
dev = ["pytest>=8.4.2,<9", "pytest-timeout>=2.4.0,<3","pytest-mock>=3.15.1,<4", "dead>=2.1.0,<3", "fakeredis>=2.32.0,<3"]


[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--tb=short",
    "--disable-warnings",
]
markers = [
    "integration: marks tests as integration tests (may require real libraries)",
    "slow: marks tests as slow (>5 seconds)",
    "gpu: marks tests as requiring GPU hardware",
    "real_llm: marks tests that make real LLM API calls (requires API keys)",
    "unit: marks tests as unit tests (fast, mocked)",
    "asyncio: marks tests as async tests",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
timeout = 300
timeout_method = "thread"

[tool.pixi.workspace]
channels = ["conda-forge", "pytorch", "nvidia"]
platforms = ["linux-64"]

[tool.pixi.dependencies]
python = "3.12.*"
ffmpeg = "*"

[tool.pixi.pypi-dependencies]
maie = { path = ".", editable = true }
chunkformer = "*"
litestar = { version = "*", extras = ["standard"] }
vllm = ">= 0.11.0"
pydantic-settings = "*"
redis = { version = "*", extras = ["hiredis"] }
rq = "*"
rq-scheduler = ">=0.14.0, <0.15"
huggingface-hub = "*"
loguru = "*"
pydantic = "*"
faster-whisper = "*"
ctranslate2 = "*"
jsonschema = "*"
python-Levenshtein = "*"
flashinfer-python = "*"
aiofiles = "*"
flashinfer-jit-cache = { url = "https://github.com/flashinfer-ai/flashinfer/releases/download/v0.4.1/flashinfer_jit_cache-0.4.1+cu128-cp39-abi3-manylinux_2_28_x86_64.whl" }

[tool.pixi.feature.dev.pypi-dependencies]
pytest-asyncio = ">=1.2.0, <2"
pytest-cov = ">=7.0.0, <8"
ruff = ">=0.14.0, <0.15"

[tool.pixi.feature.dev.tasks]
test = "pytest"
test-debug = "pytest -vv --tb=long --showlocals -ra -s"
lint = "ruff check --fix"
format = "ruff format"
api = "uvicorn src.api.main:app"
worker = "python src/worker/main.py"
scheduler = "python src/scheduler/main.py"
style = "ruff check --fix && ruff format -v && dead"  # Combined formatting and linting
download-models = "bash scripts/download-models.sh"  # Keep existing bash script

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }

[tool.pixi.activation.env]
LD_LIBRARY_PATH = "$CONDA_PREFIX/lib/python3.12/site-packages/nvidia/cudnn/lib:$CONDA_PREFIX/lib/python3.12/site-packages/nvidia/cuda_runtime/lib:$LD_LIBRARY_PATH"

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

